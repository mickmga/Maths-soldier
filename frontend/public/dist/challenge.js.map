{
  "version": 3,
  "sources": ["../../src/challenge.ts"],
  "sourcesContent": ["export {};\r\n\r\nconst goBackToMountain = (event: Event) => {\r\n  window.location.href = `${process.env.URL_BASE}/discovery`;\r\n};\r\n\r\nconst MAPS: HTMLElement[] = [];\r\nconst heroContainer = document.getElementById(\"hero_container\")!;\r\nconst heroImage = document.getElementById(\"heroImg\")! as HTMLImageElement;\r\n\r\nconst swordSlashImg = document.getElementById(\r\n  \"sword_slash\"\r\n)! as HTMLImageElement;\r\n\r\nconst scoreContainer = document.getElementById(\"score_value\")!;\r\n\r\nconst answerDataContainer = document.getElementById(\"answer_data_container\")!;\r\nconst answerDataValue = document.getElementById(\"answer_data_value\")!;\r\n\r\nconst scoreMalusContainer = document.getElementById(\"score_malus_container\")!;\r\nconst scoreMalusDetail = document.getElementById(\"score_malus_detail\")!;\r\n\r\nconst scoreRewardContainer = document.getElementById(\"score_reward_container\")!;\r\n\r\nconst scoreRewardDetail = document.getElementById(\"score_reward_detail\")!;\r\n\r\nconst runAudio = document.getElementById(\"run_audio\")! as HTMLAudioElement;\r\nconst swordAudio = document.getElementById(\"sword_audio\")! as HTMLAudioElement;\r\nconst laserdAudio = document.getElementById(\"laser_audio\")! as HTMLAudioElement;\r\nconst epicAudio = document.getElementById(\"epic_audio\")! as HTMLAudioElement;\r\nconst bassAudio = document.getElementById(\"bass_audio\")! as HTMLAudioElement;\r\nconst electricityAudio = document.getElementById(\r\n  \"electricity_audio\"\r\n)! as HTMLAudioElement;\r\nconst transformationScreamAudio = document.getElementById(\r\n  \"transformation_scream_audio\"\r\n)! as HTMLAudioElement;\r\n\r\nconst hurtAudio = document.getElementById(\r\n  \"hero_hurt_audio\"\r\n)! as HTMLAudioElement;\r\n\r\nconst transformedEpicAudio = document.getElementById(\r\n  \"transformed_epic_audio\"\r\n)! as HTMLAudioElement;\r\n\r\nconst transformationOffAudio = document.getElementById(\r\n  \"transformation_off_audio\"\r\n) as HTMLAudioElement;\r\n\r\nconst progressBar = document.getElementsByClassName(\r\n  \"progress\"\r\n)[0]! as HTMLElement;\r\n\r\nconst bombAudio = document.getElementById(\"bomb_audio\")! as HTMLAudioElement;\r\n\r\nswordAudio.volume = 0.65;\r\nbombAudio.volume = 0.12;\r\nepicAudio.volume = 0.22;\r\nelectricityAudio.volume = 0.7;\r\ntransformationScreamAudio.volume = 0.25;\r\nhurtAudio.volume = 0.02;\r\n\r\nrunAudio.volume = 0.7;\r\n\r\nlet currentSubject: Subject | null = null;\r\n\r\nlet currentSubjectTotal = 0;\r\n\r\nlet swordReach = window.innerWidth * 0.3;\r\n\r\nlet gameLaunched = false;\r\n\r\nconst TRANSFORMED_BONUS_RATIO = 1;\r\nconst REWARD_UNIT = 1;\r\n\r\nlet transformedAlready = false;\r\n\r\nconst REWARD_TIMEOUT_DURATION = 1000;\r\nconst KILLED_ENEMY_REWARD = 30;\r\n\r\nlet rewardStreak = 15;\r\n\r\nlet hardMode: boolean | null = false;\r\n\r\nlet TRANSFORMATION_THRESHOLD = hardMode ? 100000000 : 20;\r\n\r\nlet preTransformed = false;\r\n\r\nlet gameFinished = false;\r\n\r\nlet timeStoped = false;\r\n\r\nlet score = 0;\r\n\r\nlet heroHurt = false;\r\n\r\nlet heroIsAlive = true;\r\n\r\nconst lifePoints = { max: 4, value: 4 };\r\nlet INVISIBILITY_DURATION_IN_MILLISECONDS = 600;\r\n\r\nlet invisible = false;\r\n\r\nconst ennemiesOnScreen: Enemy[] = [];\r\n\r\nlet enemiesComingTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\nlet transformed = false;\r\n\r\nlet currentMalusContainerTimeout: ReturnType<typeof setTimeout> | null = null;\r\nlet currentRewardContainerTimeout: ReturnType<typeof setTimeout> | null = null;\r\nlet currentTransformationRewardContainerTimeout: ReturnType<\r\n  typeof setTimeout\r\n> | null = null;\r\n\r\nclass Answer {\r\n  data: string;\r\n  good: boolean;\r\n\r\n  constructor(data: string, good: boolean) {\r\n    this.data = data;\r\n    this.good = good;\r\n  }\r\n}\r\n\r\nclass Enemy {\r\n  element: HTMLElement;\r\n  answer: Answer;\r\n  collideable = true;\r\n\r\n  constructor(element: HTMLElement, answer: Answer) {\r\n    this.element = element;\r\n    this.answer = answer;\r\n  }\r\n}\r\n\r\nenum TimeoutId {\r\n  HERO,\r\n  ENEMY,\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    launchAttack: (event: Event) => void;\r\n    launchInvisibilityToggle: (event: Event) => void;\r\n  }\r\n}\r\n\r\ntype GameTimeouts = {\r\n  [TimeoutId.HERO]: ReturnType<typeof setTimeout>[];\r\n  [TimeoutId.ENEMY]: ReturnType<typeof setTimeout>[];\r\n};\r\n\r\nconst GAME_TIMEOUTS: GameTimeouts = {\r\n  [TimeoutId.HERO]: [],\r\n  [TimeoutId.ENEMY]: [],\r\n};\r\n\r\ntype Subject = {\r\n  title: string;\r\n  good: Array<Answer>;\r\n  bad: Array<Answer>;\r\n};\r\n\r\nconst STATS = {\r\n  title: \"statistics\",\r\n  good: [\r\n    new Answer(\r\n      \"Etendue = Valeur maximale - Valeur minimale d'un jeu de donn\u00E9e\",\r\n      true\r\n    ),\r\n\r\n    new Answer(\r\n      \"Le mode est la valeur la plus fr\u00E9quente dans un ensemble de donn\u00E9es.\",\r\n      true\r\n    ),\r\n    new Answer(\r\n      \"La variance mesure \u00E0 quel point les donn\u00E9es d'un ensemble sont dispers\u00E9es par rapport \u00E0 la moyenne.\",\r\n      true\r\n    ),\r\n    new Answer(\"L'\u00E9cart type est la racine carr\u00E9e de la variance\", true),\r\n    new Answer(\r\n      \"Les statistiques descriptives sont une des deux cat\u00E9gories des statistiques\",\r\n      true\r\n    ),\r\n\r\n    new Answer(\r\n      \"Les statistiques Inf\u00E9rentielles sont une des deux cat\u00E9gories des statistiques\",\r\n      true\r\n    ),\r\n    new Answer(\r\n      \"Les statistiques descriptives r\u00E9sument ou d\u00E9crivent les caract\u00E9ristiques d'un ensemble de donn\u00E9es\",\r\n      true\r\n    ),\r\n\r\n    new Answer(\r\n      \"Les statistiques inf\u00E9rentielles font des inf\u00E9rences et des pr\u00E9dictions sur une population \u00E0 partir d'un \u00E9chantillon de donn\u00E9es\",\r\n      true\r\n    ),\r\n    new Answer(\"Un ensemble de donn\u00E9es peut avoir plusieurs modes\", true),\r\n    new Answer(\"Un ensemble de donn\u00E9es peut avoir 0 modes\", true),\r\n  ],\r\n  bad: [\r\n    new Answer(\"Etendue = la Valeur minimale d'un jeu de donn\u00E9e\", false),\r\n    new Answer(\r\n      \"Le mode est la valeur la moins r\u00E9pendue dans un ensemble de donn\u00E9es.\",\r\n      false\r\n    ),\r\n    new Answer(\r\n      \"La variance mesure le nombre de diff\u00E9rence entre deux jeux de donn\u00E9es\",\r\n      false\r\n    ),\r\n    new Answer(\r\n      \"L'\u00E9cart type est l'\u00E9cart entre le premier et le dernier \u00E9l\u00E9ment d'un jeu de donn\u00E9e \",\r\n      false\r\n    ),\r\n    new Answer(\r\n      \"Les statistiques cumulatives sont une des deux cat\u00E9gories des statistiques\",\r\n      false\r\n    ),\r\n\r\n    new Answer(\r\n      \"Les statistiques proclamatives sont une des deux cat\u00E9gories des statistiques\",\r\n      false\r\n    ),\r\n    new Answer(\"Les statistiques descriptives n'existent pas\", false),\r\n\r\n    new Answer(\r\n      \"les statistique inf\u00E9rentielles d\u00E9crivent les caract\u00E9ristiques d'un ensemble de donn\u00E9es\",\r\n      false\r\n    ),\r\n    new Answer(\"Un ensemble de donn\u00E9es ne peut avoir qu'un modes\", false),\r\n    new Answer(\"Un ensemble de donn\u00E9es ne peut pas avoir 0 modes\", false),\r\n  ],\r\n};\r\n\r\nconst VECTORS = {\r\n  title: \"Additions\",\r\n  good: [\r\n    new Answer(\"un vecteur est not\u00E9 AB -> ou u ->\", true),\r\n    new Answer(\r\n      \"La norme d'un vecteur, not\u00E9e ||AB->|| est la longueur du vecteur AB -> autrement dit, la distance entre les points A et B.\",\r\n      true\r\n    ),\r\n    new Answer(\r\n      \"Le point d'origine du vecteur AB -> (ici le point A) est le point de d\u00E9part qui en caract\u00E9rise le sens\",\r\n      true\r\n    ),\r\n    new Answer(\r\n      \"Le point d'extr\u00E9mit\u00E9 de AB -> est le point d'arriv\u00E9e  (ici le point B) qui en caract\u00E9rise le sens\",\r\n      true\r\n    ),\r\n    new Answer(\"Le vecteur oppos\u00E9 du vecteur AB > est BA -> ou -AB -> \", true),\r\n\r\n    new Answer(\r\n      \"lorsque deux points AB sont confondus, on dit que AB -> est un vecteur nul\",\r\n      true\r\n    ),\r\n  ],\r\n  bad: [\r\n    new Answer(\r\n      \"Sens, et direction sont synonymes lorsqu'on parle de vecteurs\",\r\n      false\r\n    ),\r\n    new Answer(\r\n      \"Le point d'extremit\u00E9 est toujours \u00E9gal au point d'arriv\u00E9e d'un vecteur\",\r\n      false\r\n    ),\r\n    new Answer(\r\n      \"Le point d'extremit\u00E9 represente le point de d\u00E9part du vecteur\",\r\n      false\r\n    ),\r\n    new Answer(\r\n      \"Un vecteur ne peut pas \u00EAtre nul, sinon ce n'est pas un vecteur\",\r\n      false\r\n    ),\r\n  ],\r\n};\r\n\r\nconst MATHS_ARITHMETIC = {\r\n  title: \"Arithmetic\",\r\n  good: [\r\n    new Answer(\"8/4=2\", true),\r\n    new Answer(\"3X6=18\", true),\r\n    new Answer(\"12x4=48\", true),\r\n    new Answer(\"8/2=4\", true),\r\n    new Answer(\"4X2.5=10\", true),\r\n    new Answer(\"5-3=2\", true),\r\n    new Answer(\"6/3=2\", true),\r\n    new Answer(\"15/5=3\", true),\r\n    new Answer(\"8X3=24\", true),\r\n    new Answer(\"3-2.5=1.5\", true),\r\n    new Answer(\"2X8=16\", true),\r\n    new Answer(\"17-10=7\", true),\r\n    new Answer(\"16/8=2\", true),\r\n    new Answer(\"6/2=3\", true),\r\n    new Answer(\"2X2X2=8\", true),\r\n    new Answer(\"8X2X2=32\", true),\r\n    new Answer(\"6x4=24\", true),\r\n    new Answer(\"10/2=5\", true),\r\n    new Answer(\"2+3=5\", true),\r\n    new Answer(\"7-5=2\", true),\r\n  ],\r\n  bad: [\r\n    new Answer(\"2X2.5=3\", false),\r\n    new Answer(\"3-1.75=2.25\", false),\r\n    new Answer(\"2x6=15\", false),\r\n    new Answer(\"8/3=3\", false),\r\n    new Answer(\"3X2.5=5\", false),\r\n    new Answer(\"5-3=3\", false),\r\n    new Answer(\"6/3=3\", false),\r\n    new Answer(\"1x3=4\", false),\r\n    new Answer(\"8/4=3\", false),\r\n    new Answer(\"3-2=2\", false),\r\n    new Answer(\"3X4=18\", false),\r\n    new Answer(\"15-2=12\", false),\r\n    new Answer(\"2x12.5=24\", false),\r\n    new Answer(\"6/2=4\", false),\r\n    new Answer(\"4X2=10\", false),\r\n    new Answer(\"6/2=2\", false),\r\n    new Answer(\"3x4=15\", false),\r\n    new Answer(\"15/5=2X2.5\", false),\r\n    new Answer(\"2X3.5=6.5\", false),\r\n    new Answer(\"7-1.5=4.5\", false),\r\n  ],\r\n};\r\n\r\nconst MATHS_MEDIUM = {\r\n  title: \"Additions\",\r\n  good: [\r\n    new Answer(\"10+5=15\", true),\r\n    new Answer(\"6X6=36\", true),\r\n    new Answer(\"10X5+7=57\", true),\r\n    new Answer(\"10+12=22\", true),\r\n    new Answer(\"10-4=6\", true),\r\n    new Answer(\"6x3=18\", true),\r\n    new Answer(\"10-2=2x2x2\", true),\r\n    new Answer(\"10X3=15x2\", true),\r\n    new Answer(\"8+8=4X4\", true),\r\n    new Answer(\"10X5=25X2\", true),\r\n    new Answer(\"6x13=78\", true),\r\n    new Answer(\"10+10.5=20.5\", true),\r\n    new Answer(\"10X19+20=210\", true),\r\n    new Answer(\"8+16=24\", true),\r\n    new Answer(\"10+5=15\", true),\r\n    new Answer(\"6X6=36\", true),\r\n    new Answer(\"10X5+7=57\", true),\r\n    new Answer(\"10+12=22\", true),\r\n    new Answer(\"10-4=6\", true),\r\n    new Answer(\"6x3=18\", true),\r\n    new Answer(\"10-2=2x2x2\", true),\r\n    new Answer(\"10X3=15x2\", true),\r\n    new Answer(\"8+8=4X4\", true),\r\n    new Answer(\"10X5=25X2\", true),\r\n    new Answer(\"6x13=78\", true),\r\n    new Answer(\"10+10.5=20.5\", true),\r\n    new Answer(\"10X19+20=210\", true),\r\n    new Answer(\"8+16=24\", true),\r\n    new Answer(\"10+5=15\", true),\r\n    new Answer(\"6X6=36\", true),\r\n    new Answer(\"10X5+7=57\", true),\r\n    new Answer(\"10+12=22\", true),\r\n    new Answer(\"10-4=6\", true),\r\n    new Answer(\"6x3=18\", true),\r\n    new Answer(\"10-2=2x2x2\", true),\r\n    new Answer(\"10X3=15x2\", true),\r\n    new Answer(\"8+8=4X4\", true),\r\n    new Answer(\"10X5=25X2\", true),\r\n    new Answer(\"6x13=78\", true),\r\n    new Answer(\"10+10.5=20.5\", true),\r\n    new Answer(\"10X19+20=210\", true),\r\n    new Answer(\"8+16=24\", true),\r\n    new Answer(\"10+5=15\", true),\r\n    new Answer(\"6X6=36\", true),\r\n    new Answer(\"10X5+7=57\", true),\r\n    new Answer(\"10+12=22\", true),\r\n    new Answer(\"10-4=6\", true),\r\n    new Answer(\"6x3=18\", true),\r\n    new Answer(\"10-2=2x2x2\", true),\r\n    new Answer(\"10X3=15x2\", true),\r\n    new Answer(\"8+8=4X4\", true),\r\n    new Answer(\"10X5=25X2\", true),\r\n    new Answer(\"6x13=78\", true),\r\n    new Answer(\"10+10.5=20.5\", true),\r\n    new Answer(\"10X19+20=210\", true),\r\n    new Answer(\"8+16=24\", true),\r\n  ],\r\n  bad: [\r\n    new Answer(\"10+15=20\", false),\r\n    new Answer(\"6X3=21\", false),\r\n    new Answer(\"10x60=6000\", false),\r\n    new Answer(\"12x12.5=250\", false),\r\n    new Answer(\"15x2=20\", false),\r\n    new Answer(\"6x4=20\", false),\r\n    new Answer(\"10-5=20\", false),\r\n    new Answer(\"100X2=400\", false),\r\n    new Answer(\"8+22=40\", false),\r\n    new Answer(\"10X3=1000/100\", false),\r\n    new Answer(\"10X15=145\", false),\r\n    new Answer(\"6x100=6000\", false),\r\n    new Answer(\"10X10=1000\", false),\r\n    new Answer(\"19-2.5 = 17.5\", false),\r\n    new Answer(\"8+17=24\", false),\r\n  ],\r\n};\r\n\r\n//local storage\r\n\r\nconst getNextAnswer = () => {\r\n  const randVal = Math.random() > 0.5;\r\n\r\n  if (!currentSubject) {\r\n    return;\r\n  }\r\n\r\n  const getAndRemoveSubject: any = (index: number, list: Array<any>) => {\r\n    let foundElement = null;\r\n    for (let elementIndex = 0; elementIndex < list.length; elementIndex++) {\r\n      let element = list[elementIndex];\r\n      if (elementIndex === index) {\r\n        list.splice(elementIndex, 1);\r\n        foundElement = element;\r\n        break; // Break out of the loop since we found and removed the element\r\n      }\r\n    }\r\n    if (foundElement === null) {\r\n      console.log(\"error => we couldnt find an element in the answers list\");\r\n    }\r\n\r\n    return foundElement;\r\n  };\r\n\r\n  if (randVal) {\r\n    return currentSubject.good.length\r\n      ? getAndRemoveSubject(\r\n          Math.round(Math.random() * (currentSubject.good.length - 1)),\r\n          currentSubject.good\r\n        )\r\n      : currentSubject.bad.length\r\n      ? getAndRemoveSubject(\r\n          Math.round(Math.random() * (currentSubject.bad.length - 1)),\r\n          currentSubject.bad\r\n        )\r\n      : \"done\";\r\n  } else {\r\n    return currentSubject.bad.length\r\n      ? getAndRemoveSubject(\r\n          Math.round(Math.random() * (currentSubject.bad.length - 1)),\r\n          currentSubject.bad\r\n        )\r\n      : currentSubject.good.length\r\n      ? getAndRemoveSubject(\r\n          Math.round(Math.random() * (currentSubject.good.length - 1)),\r\n          currentSubject.good\r\n        )\r\n      : \"done\";\r\n  }\r\n};\r\n\r\nconst Grades = {\r\n  D: [0, 1, 2, 3, 4, 5],\r\n  C: [6, 7, 8, 9, 10],\r\n  B: [11, 12, 13, 14],\r\n  A: [15, 16, 17],\r\n  S: [18, 19, 20],\r\n};\r\n\r\n/*\r\n\r\nconst getChallengeGrade = () => {\r\n  return Grades.D.includes(score)\r\n    ? \"D\"\r\n    : Grades.C.includes(score)\r\n    ? \"C\"\r\n    : Grades.B.includes(score)\r\n    ? \"B\"\r\n    : Grades.A.includes(score)\r\n    ? \"A\"\r\n    : \"S\";\r\n};\r\n\r\n*/\r\n\r\nconst getChallengeGrade = () => {\r\n  if (!currentSubject) {\r\n    return;\r\n  }\r\n\r\n  const grade = Math.round((score / currentSubjectTotal) * 20);\r\n\r\n  return Grades.D.includes(grade)\r\n    ? \"D\"\r\n    : Grades.C.includes(grade)\r\n    ? \"C\"\r\n    : Grades.B.includes(grade)\r\n    ? \"B\"\r\n    : Grades.A.includes(grade)\r\n    ? \"A\"\r\n    : \"S\";\r\n};\r\n\r\nconst updateLifePointsDisplay = () => {\r\n  for (let i = 1; i <= lifePoints.max; i++) {\r\n    const lifePointOpacity = i <= lifePoints.value ? \"1\" : \"0.3\";\r\n\r\n    document.getElementById(`lifePointContainer_${i}`)!.style.opacity =\r\n      lifePointOpacity;\r\n  }\r\n};\r\n\r\nconst buildEnemyElement = () => {\r\n  const newOpponentContainer = document.createElement(\"div\");\r\n  newOpponentContainer.classList.add(\"enemy_container\");\r\n  const newEnnemyImg = document.createElement(\"img\") as HTMLImageElement;\r\n  newEnnemyImg.src = hardMode\r\n    ? \"assets/challenge/characters/enemies/hard/1.png\"\r\n    : \"assets/challenge/characters/enemies/black_spirit/run/1.png\";\r\n\r\n  newOpponentContainer.append(newEnnemyImg);\r\n\r\n  document.getElementsByTagName(\"body\")[0].append(newOpponentContainer);\r\n\r\n  return newOpponentContainer;\r\n};\r\n\r\nconst buildEnemy = (answer: Answer) => {\r\n  //construct opponent at a specific point, run it\r\n\r\n  const enemyElement = buildEnemyElement();\r\n\r\n  if (!enemyElement) {\r\n    return;\r\n  }\r\n\r\n  document.getElementsByTagName(\"body\")[0].append();\r\n\r\n  const enemy = new Enemy(enemyElement, answer);\r\n\r\n  ennemiesOnScreen.push(enemy);\r\n\r\n  return enemy;\r\n};\r\n\r\nconst buildAndLaunchEnemy = (answer: Answer) => {\r\n  const enemy = buildEnemy(answer);\r\n\r\n  if (!enemy) {\r\n    return;\r\n  }\r\n  lightUpAnswerDataContainer();\r\n\r\n  answerDataValue.innerHTML = enemy.answer.data;\r\n\r\n  launchOpponent(enemy);\r\n};\r\n\r\nconst triggerOpponentsApparition = () => {\r\n  const newAnswer = getNextAnswer();\r\n\r\n  enemiesComingTimeout = setTimeout(\r\n    () => {\r\n      if (newAnswer && newAnswer !== \"done\") {\r\n        buildAndLaunchEnemy(newAnswer);\r\n      } else {\r\n        launchEndOfChallenge();\r\n      }\r\n    },\r\n    Math.random() > 0.5 ? 500 : 1000\r\n  );\r\n};\r\n\r\nlet backgroundSrc = \"assets/palace/maps/castle/castle.gif\";\r\n\r\nconst launchEndOfChallenge = () => {\r\n  gameFinished = true;\r\n  document.getElementById(\"endOfGameInterface\")!.style.display = \"flex\";\r\n  clearGameTimeouts();\r\n  initAllAnimations();\r\n  heroImage.src = \"assets/challenge/characters/hero/run/1.png\";\r\n  document.getElementById(\"transformation_background\")!.style.display = \"none\";\r\n\r\n  const grade = getChallengeGrade();\r\n\r\n  const levelUpAudio = document.getElementById(\r\n    \"levelup_audio\"\r\n  )! as HTMLAudioElement;\r\n  const endOfChallengeButton = document.getElementById(\r\n    \"challengesuccessButton\"\r\n  )!;\r\n\r\n  const displayEndOfGameButton = () => {\r\n    if (grade === \"A\" || grade === \"S\") {\r\n      endOfChallengeButton.style.display = \"flex\";\r\n      levelUpAudio.play();\r\n    }\r\n  };\r\n\r\n  setTimeout(() => {\r\n    if (!grade) {\r\n      return;\r\n    }\r\n    killAllAudios();\r\n\r\n    document.getElementById(\"endOfGameInterfaceScore\")!.innerHTML = grade;\r\n    document.getElementById(\"endOfGameInterfaceScore\")!.style.display = \"flex\";\r\n    const stampAudio = document.getElementById(\r\n      \"stamp_audio\"\r\n    )! as HTMLAudioElement;\r\n    stampAudio.play();\r\n\r\n    setTimeout(() => {\r\n      displayEndOfGameButton();\r\n    }, 2000);\r\n  }, 1000);\r\n};\r\n\r\nexport enum ANIMATION_ID {\r\n  attack,\r\n  run,\r\n  walk,\r\n  hurt,\r\n  death,\r\n  idle,\r\n  stop_time,\r\n  cancel_stop_time,\r\n  opponent_run,\r\n  opponent_attack,\r\n  opponent_move,\r\n  opponent_death,\r\n  camera_left_to_right,\r\n  camera_right_to_left,\r\n  character_left_to_right_move,\r\n  hero_sword_slash,\r\n  transformation_pre_run,\r\n  transformation_run,\r\n  transformation_hurt,\r\n  boss_idle,\r\n  boss_attack,\r\n}\r\n\r\nexport const ANIMATION_RUNNING_VALUES = {\r\n  [ANIMATION_ID.attack]: 0,\r\n  [ANIMATION_ID.run]: 0,\r\n  [ANIMATION_ID.walk]: 0,\r\n  [ANIMATION_ID.death]: 0,\r\n  [ANIMATION_ID.hurt]: 0,\r\n  [ANIMATION_ID.idle]: 0,\r\n  [ANIMATION_ID.stop_time]: 0,\r\n  [ANIMATION_ID.cancel_stop_time]: 0,\r\n  [ANIMATION_ID.opponent_run]: 0,\r\n  [ANIMATION_ID.opponent_attack]: 0,\r\n  [ANIMATION_ID.opponent_death]: 0,\r\n  [ANIMATION_ID.opponent_move]: 0,\r\n  [ANIMATION_ID.camera_left_to_right]: 0,\r\n  [ANIMATION_ID.camera_right_to_left]: 0,\r\n  [ANIMATION_ID.character_left_to_right_move]: 0,\r\n  [ANIMATION_ID.hero_sword_slash]: 0,\r\n  [ANIMATION_ID.transformation_pre_run]: 0,\r\n  [ANIMATION_ID.transformation_run]: 0,\r\n  [ANIMATION_ID.transformation_hurt]: 0,\r\n  [ANIMATION_ID.boss_idle]: 0,\r\n  [ANIMATION_ID.boss_attack]: 0,\r\n};\r\n\r\nexport const THROTTLE_NUMS = {\r\n  [ANIMATION_ID.attack]: 0,\r\n  [ANIMATION_ID.run]: 5,\r\n  [ANIMATION_ID.walk]: 5,\r\n  [ANIMATION_ID.death]: 5,\r\n  [ANIMATION_ID.hurt]: 0,\r\n  [ANIMATION_ID.idle]: 20,\r\n  [ANIMATION_ID.stop_time]: 5,\r\n  [ANIMATION_ID.cancel_stop_time]: 5,\r\n  [ANIMATION_ID.opponent_run]: 5,\r\n  [ANIMATION_ID.opponent_attack]: 0,\r\n  [ANIMATION_ID.opponent_death]: 0,\r\n  [ANIMATION_ID.opponent_move]: 0,\r\n  [ANIMATION_ID.camera_left_to_right]: 0,\r\n  [ANIMATION_ID.camera_right_to_left]: 5,\r\n  [ANIMATION_ID.hero_sword_slash]: 0,\r\n  [ANIMATION_ID.character_left_to_right_move]: 5,\r\n  [ANIMATION_ID.transformation_pre_run]: 5,\r\n  [ANIMATION_ID.transformation_run]: 5,\r\n  [ANIMATION_ID.transformation_hurt]: 0,\r\n  [ANIMATION_ID.boss_idle]: 15,\r\n  [ANIMATION_ID.boss_attack]: 10,\r\n};\r\n\r\nconst timeManipulationToggle = () => {\r\n  if (!gameLaunched || !hardMode) return;\r\n  if (timeStoped) {\r\n    cancelStopTimeSpell();\r\n  } else {\r\n    stopTime();\r\n  }\r\n};\r\n\r\nconst createMapBlock = (left: number) => {\r\n  const block = document.createElement(\"div\");\r\n  block.classList.add(\"mapBlock\");\r\n  const backgroundImage = document.createElement(\"img\");\r\n  backgroundImage.src = backgroundSrc;\r\n  block.append(backgroundImage);\r\n  block.style.position = \"fixed\";\r\n  block.style.left = `${left}px`;\r\n  block.onclick = (event: Event) => timeManipulationToggle();\r\n\r\n  document.getElementsByTagName(\"body\")[0].append(block);\r\n\r\n  return block;\r\n};\r\n\r\nconst slowTime = (multiplicator: number) => {\r\n  const runMultiplicatorBase = THROTTLE_NUMS[ANIMATION_ID.run]\r\n    ? THROTTLE_NUMS[ANIMATION_ID.run]\r\n    : 1;\r\n  THROTTLE_NUMS[ANIMATION_ID.run] =\r\n    runMultiplicatorBase * multiplicator * 1.5 * 1.5;\r\n\r\n  const cameraMoveMultiplicatorBase = THROTTLE_NUMS[\r\n    ANIMATION_ID.camera_left_to_right\r\n  ]\r\n    ? THROTTLE_NUMS[ANIMATION_ID.camera_left_to_right]\r\n    : 1;\r\n  THROTTLE_NUMS[ANIMATION_ID.camera_left_to_right] =\r\n    cameraMoveMultiplicatorBase * multiplicator * 1.5;\r\n\r\n  const opponentRunMultiplicatorBase = THROTTLE_NUMS[ANIMATION_ID.opponent_run]\r\n    ? THROTTLE_NUMS[ANIMATION_ID.opponent_run]\r\n    : 1;\r\n  THROTTLE_NUMS[ANIMATION_ID.opponent_run] =\r\n    opponentRunMultiplicatorBase * multiplicator;\r\n\r\n  const opponentMoveMultiplicatorBase = THROTTLE_NUMS[\r\n    ANIMATION_ID.opponent_move\r\n  ]\r\n    ? THROTTLE_NUMS[ANIMATION_ID.opponent_move]\r\n    : 1;\r\n  THROTTLE_NUMS[ANIMATION_ID.opponent_move] =\r\n    opponentMoveMultiplicatorBase * multiplicator * 2;\r\n};\r\n\r\nconst moveCamera = (\r\n  direction: ANIMATION_ID,\r\n  throttleNum = 0,\r\n  previousFrameTimestamp: number\r\n): any => {\r\n  if (\r\n    ANIMATION_RUNNING_VALUES[direction] === 0 ||\r\n    ANIMATION_RUNNING_VALUES[direction] > 1\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  const currentFrameTimeStamp = Date.now();\r\n\r\n  const diff = currentFrameTimeStamp - previousFrameTimestamp;\r\n\r\n  if (throttleNum < THROTTLE_NUMS[ANIMATION_ID.camera_left_to_right]) {\r\n    throttleNum++;\r\n    return requestAnimationFrame(() =>\r\n      moveCamera(direction, throttleNum, currentFrameTimeStamp)\r\n    );\r\n  }\r\n\r\n  throttleNum = 0;\r\n\r\n  MAPS.forEach(\r\n    (map) =>\r\n      (map.style.left = `${\r\n        map.offsetLeft +\r\n        ((direction === ANIMATION_ID.camera_left_to_right ? -1 : 1) * diff) / 3\r\n      }px`)\r\n  );\r\n\r\n  requestAnimationFrame(() => moveCamera(direction, 0, currentFrameTimeStamp));\r\n};\r\n\r\nexport const launchAnimationAndDeclareItLaunched = (\r\n  characterElement: HTMLImageElement,\r\n  throttleNum: number,\r\n  extension: string,\r\n  spriteBase: string,\r\n  spriteIndex: number,\r\n  max: number,\r\n  min: number,\r\n  loop: boolean,\r\n  animationId: ANIMATION_ID,\r\n  endOfAnimationCallback?: () => void\r\n) => {\r\n  if (ANIMATION_RUNNING_VALUES[animationId] >= 1) {\r\n    return;\r\n  }\r\n  ANIMATION_RUNNING_VALUES[animationId]++;\r\n\r\n  launchCharacterAnimation(\r\n    characterElement,\r\n    throttleNum,\r\n    extension,\r\n    spriteBase,\r\n    spriteIndex,\r\n    max,\r\n    min,\r\n    loop,\r\n    animationId\r\n  );\r\n};\r\n\r\nconst launchCharacterAnimation = (\r\n  characterElement: HTMLImageElement,\r\n  throttleNum: number,\r\n  extension: string,\r\n  spriteBase: string,\r\n  spriteIndex: number,\r\n  max: number,\r\n  min: number,\r\n  loop: boolean,\r\n  animationId: ANIMATION_ID,\r\n  endOfAnimationCallback?: () => void,\r\n  lastExecutionTimeStamp?: number\r\n): any => {\r\n  if (gameFinished) {\r\n    return;\r\n  }\r\n\r\n  if (\r\n    !ANIMATION_RUNNING_VALUES[animationId] ||\r\n    ANIMATION_RUNNING_VALUES[animationId] > 1\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  if (throttleNum < THROTTLE_NUMS[animationId]) {\r\n    throttleNum++;\r\n    return requestAnimationFrame(() =>\r\n      launchCharacterAnimation(\r\n        characterElement,\r\n        throttleNum,\r\n        extension,\r\n        spriteBase,\r\n        spriteIndex,\r\n        max,\r\n        min,\r\n        loop,\r\n        animationId,\r\n        () => {},\r\n        lastExecutionTimeStamp\r\n      )\r\n    );\r\n  }\r\n\r\n  //SPAGHETTI ANIMATION SPECIFIC\r\n\r\n  const newExecutionTimeStamp = Date.now();\r\n\r\n  if (animationId === ANIMATION_ID.run && lastExecutionTimeStamp) {\r\n    const diff = newExecutionTimeStamp - lastExecutionTimeStamp;\r\n\r\n    if (diff < 100) {\r\n      return requestAnimationFrame(() =>\r\n        launchCharacterAnimation(\r\n          characterElement,\r\n          throttleNum,\r\n          extension,\r\n          spriteBase,\r\n          spriteIndex,\r\n          max,\r\n          min,\r\n          loop,\r\n          animationId,\r\n          () => {},\r\n          lastExecutionTimeStamp\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  throttleNum = 0;\r\n\r\n  if (spriteIndex === max) {\r\n    if (loop === false) {\r\n      ANIMATION_RUNNING_VALUES[animationId] = 0;\r\n      if (endOfAnimationCallback) endOfAnimationCallback();\r\n      return;\r\n    }\r\n\r\n    spriteIndex = min;\r\n  } else {\r\n    spriteIndex++;\r\n  }\r\n\r\n  if (!characterElement) {\r\n    console.log(\"the element you try to modify the source of, does not exist\");\r\n    return;\r\n  }\r\n  characterElement.src = `${spriteBase}/${spriteIndex}.${extension}`;\r\n\r\n  requestAnimationFrame(() =>\r\n    launchCharacterAnimation(\r\n      characterElement,\r\n      throttleNum,\r\n      extension,\r\n      spriteBase,\r\n      spriteIndex,\r\n      max,\r\n      min,\r\n      loop,\r\n      animationId,\r\n      () => {},\r\n      newExecutionTimeStamp\r\n    )\r\n  );\r\n};\r\n\r\nconst initAnimation = (animationId: ANIMATION_ID) => {\r\n  ANIMATION_RUNNING_VALUES[animationId] = 0;\r\n};\r\n\r\nconst initAllAnimations = () => {\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.attack] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.run] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.death] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.hurt] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.idle] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.opponent_run] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.opponent_death] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.opponent_move] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_left_to_right] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_right_to_left] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.character_left_to_right_move] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.transformation_pre_run] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.transformation_run] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.transformation_hurt] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.boss_idle] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.boss_attack] = 0;\r\n};\r\n\r\nconst turnHeroTransformationOff = () => {\r\n  transformed = false;\r\n  runAudio.playbackRate = 1;\r\n  transformationOffAudio.play();\r\n\r\n  progressBar.style.display = \"flex\";\r\n\r\n  transformedEpicAudio.pause();\r\n  transformedEpicAudio.currentTime = 0;\r\n\r\n  electricityAudio.currentTime = 0;\r\n\r\n  epicAudio.currentTime = 0;\r\n\r\n  setTimeout(() => {\r\n    electricityAudio.volume = 0;\r\n  }, 1000);\r\n\r\n  setTimeout(() => {\r\n    epicAudio.play();\r\n  }, 4000);\r\n\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.transformation_run] = 0;\r\n\r\n  launchHeroRunAnimation();\r\n};\r\n\r\nconst launchAttack = () => {\r\n  if (invisible || !heroIsAlive) {\r\n    return;\r\n  }\r\n  if (transformed) {\r\n    laserdAudio.play();\r\n  } else {\r\n    swordAudio.play();\r\n    swordAudio.currentTime = 0;\r\n  }\r\n  if (transformed) {\r\n    ANIMATION_RUNNING_VALUES[ANIMATION_ID.transformation_run] = 0;\r\n  } else {\r\n    ANIMATION_RUNNING_VALUES[ANIMATION_ID.run] = 0;\r\n  }\r\n\r\n  launchSwordSlash();\r\n\r\n  launchAnimationAndDeclareItLaunched(\r\n    heroImage,\r\n    0,\r\n    \"png\",\r\n    `assets/challenge/characters/${\r\n      transformed ? \"transformed_hero\" : \"hero\"\r\n    }/attack`,\r\n    1,\r\n    transformed ? 12 : 4,\r\n    1,\r\n    false,\r\n    ANIMATION_ID.attack\r\n  );\r\n\r\n  const enemyCanBeHit = (enemy: Enemy) => {\r\n    return (\r\n      enemy.element.getBoundingClientRect().left >\r\n        heroContainer.getBoundingClientRect().left +\r\n          heroContainer.getBoundingClientRect().width &&\r\n      enemy.element.getBoundingClientRect().left <\r\n        heroContainer.getBoundingClientRect().left +\r\n          heroContainer.getBoundingClientRect().width +\r\n          swordReach\r\n    );\r\n  };\r\n\r\n  ennemiesOnScreen.forEach((enemy) => {\r\n    if (!enemyCanBeHit(enemy)) {\r\n      return;\r\n    }\r\n    if (!enemy.answer.good) {\r\n      killWrongEnemy(enemy);\r\n    } else {\r\n      killRightEnemyAndUpdateScore(enemy);\r\n    }\r\n  });\r\n\r\n  if (preTransformed || !heroIsAlive) {\r\n    return;\r\n  }\r\n\r\n  clearTimeoutAndLaunchNewOne(\r\n    TimeoutId.HERO,\r\n    setTimeout(() => {\r\n      launchHeroRunAnimation();\r\n    }, 200)\r\n  );\r\n};\r\n\r\nwindow.launchAttack = (event: Event) => {\r\n  if (!gameLaunched) {\r\n    launchGame();\r\n    return;\r\n  }\r\n  launchAttack();\r\n};\r\n\r\nconst clearTimeoutAndLaunchNewOne = (\r\n  timeoutId: TimeoutId,\r\n  timeout: ReturnType<typeof setTimeout>\r\n) => {\r\n  GAME_TIMEOUTS[timeoutId].forEach((gameTimout) => clearTimeout(gameTimout));\r\n\r\n  GAME_TIMEOUTS[timeoutId] = [timeout];\r\n};\r\n\r\nconst launchOpponent = (enemy: Enemy) => {\r\n  launchAnimationAndDeclareItLaunched(\r\n    enemy.element.firstChild as HTMLImageElement,\r\n    0,\r\n    \"png\",\r\n    hardMode\r\n      ? \"assets/challenge/characters/enemies/hard\"\r\n      : \"assets/challenge/characters/enemies/black_spirit/run\",\r\n    1,\r\n    hardMode ? 6 : 4,\r\n    1,\r\n    true,\r\n    ANIMATION_ID.opponent_run\r\n  );\r\n  moveEnemy(enemy, 0, Date.now());\r\n};\r\n\r\nconst launchEnemyAttack = (enemy: Enemy) => {\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.opponent_run] = 0;\r\n\r\n  launchAnimationAndDeclareItLaunched(\r\n    enemy.element.firstChild as HTMLImageElement,\r\n    0,\r\n    \"png\",\r\n    \"assets/challenge/characters/enemies/black_spirit/attack\",\r\n    1,\r\n    8,\r\n    1,\r\n    false,\r\n    ANIMATION_ID.opponent_attack,\r\n    () => {\r\n      ANIMATION_RUNNING_VALUES[ANIMATION_ID.opponent_attack] = 0;\r\n\r\n      launchAnimationAndDeclareItLaunched(\r\n        enemy.element.firstChild as HTMLImageElement,\r\n        0,\r\n        \"png\",\r\n        \"assets/challenge/characters/enemies/black_spirit/run\",\r\n        1,\r\n        4,\r\n        1,\r\n        false,\r\n        ANIMATION_ID.opponent_run,\r\n        () => {}\r\n      );\r\n    }\r\n  );\r\n\r\n  () => {\r\n    ANIMATION_RUNNING_VALUES[ANIMATION_ID.opponent_run];\r\n  };\r\n};\r\n\r\nconst moveEnemy = (\r\n  enemy: Enemy,\r\n  throttleNum = 0,\r\n  previousTimeStamp: number\r\n): any => {\r\n  if (ANIMATION_RUNNING_VALUES[ANIMATION_ID.opponent_run] !== 1) {\r\n    return;\r\n  }\r\n\r\n  const currentTimeStamp = Date.now();\r\n\r\n  const diff = currentTimeStamp - previousTimeStamp;\r\n\r\n  if (throttleNum < THROTTLE_NUMS[ANIMATION_ID.opponent_move]) {\r\n    throttleNum++;\r\n    return requestAnimationFrame(() =>\r\n      moveEnemy(enemy, throttleNum, currentTimeStamp)\r\n    );\r\n  }\r\n\r\n  throttleNum = 0;\r\n\r\n  enemy.element.style.left = `${\r\n    enemy.element.getBoundingClientRect().left - diff * (hardMode ? 0.33 : 1)\r\n  }px`;\r\n\r\n  requestAnimationFrame(() => moveEnemy(enemy, throttleNum, currentTimeStamp));\r\n};\r\n\r\nconst transformIfRequired = () => {\r\n  if (rewardStreak >= TRANSFORMATION_THRESHOLD && !transformed) {\r\n    rewardStreak = 0;\r\n    updateTransformationProgressBarDisplay();\r\n    launchTransformation();\r\n  }\r\n};\r\n\r\nconst killRightEnemyAndUpdateScore = (enemy: Enemy) => {\r\n  killEnemy(enemy);\r\n\r\n  rewardHero();\r\n  transformIfRequired();\r\n};\r\n\r\nconst rewardHero = () => {\r\n  const bonus_ratio = transformed ? TRANSFORMED_BONUS_RATIO : 1;\r\n  if (!transformed) {\r\n    rewardStreak++;\r\n    updateTransformationProgressBarDisplay();\r\n  }\r\n\r\n  score += bonus_ratio * REWARD_UNIT;\r\n  updateScoreDisplay();\r\n\r\n  displayReward(\"Congrats! You destroyed a good answer!\");\r\n\r\n  if (transformed) {\r\n    displayTransformationKillReward(\r\n      `Transformation bonus reward! X${TRANSFORMED_BONUS_RATIO}`\r\n    );\r\n  }\r\n};\r\n\r\nconst updateScoreDisplay = () => {\r\n  scoreContainer.innerHTML = (score * KILLED_ENEMY_REWARD).toString();\r\n};\r\n\r\nconst killWrongEnemy = (enemy: Enemy) => {\r\n  scoreMalusContainer.style.display = \"flex\";\r\n\r\n  //lifepoints.value--;\r\n  checkForHerosDeath();\r\n\r\n  updateLifePointsDisplay();\r\n\r\n  rewardStreak = 0;\r\n  updateTransformationProgressBarDisplay();\r\n\r\n  killEnemy(enemy);\r\n\r\n  displayMalus(\"MALUS! Wrong enemy killed!\");\r\n};\r\n\r\nconst displayMalus = (content: string) => {\r\n  if (currentMalusContainerTimeout) {\r\n    clearTimeout(currentMalusContainerTimeout);\r\n    currentMalusContainerTimeout = null;\r\n  }\r\n\r\n  // scoreMalusDetail.innerHTML = content;\r\n  scoreMalusContainer.style.display = \"flex\";\r\n\r\n  currentMalusContainerTimeout = setTimeout(() => {\r\n    scoreMalusDetail.innerHTML = \"\";\r\n    scoreMalusContainer.style.display = \"none\";\r\n  }, 2000);\r\n};\r\n\r\nconst hideMalus = () => {\r\n  hideReward();\r\n  if (currentMalusContainerTimeout) {\r\n    clearTimeout(currentMalusContainerTimeout);\r\n    currentMalusContainerTimeout = null;\r\n  }\r\n\r\n  scoreMalusDetail.innerHTML = \"\";\r\n  scoreMalusContainer.style.display = \"none\";\r\n};\r\n\r\nconst displayReward = (content: string) => {\r\n  hideMalus();\r\n  if (currentRewardContainerTimeout) {\r\n    clearTimeout(currentRewardContainerTimeout);\r\n    currentRewardContainerTimeout = null;\r\n  }\r\n\r\n  //  scoreRewardDetail.innerHTML = content;\r\n  scoreRewardContainer.style.display = \"flex\";\r\n\r\n  currentRewardContainerTimeout = setTimeout(() => {\r\n    scoreRewardDetail.innerHTML = \"\";\r\n    scoreRewardContainer.style.display = \"none\";\r\n  }, 2000);\r\n};\r\n\r\nconst displayTransformationKillReward = (content: string) => {\r\n  const transformationRewardContainer = document.getElementById(\r\n    \"transformed_hero_bonus_reward_container\"\r\n  )!;\r\n  transformationRewardContainer.style.display = \"flex\";\r\n\r\n  if (currentTransformationRewardContainerTimeout) {\r\n    clearTimeout(currentTransformationRewardContainerTimeout);\r\n    currentTransformationRewardContainerTimeout = null;\r\n  }\r\n\r\n  currentRewardContainerTimeout = setTimeout(() => {\r\n    transformationRewardContainer.style.display = \"none\";\r\n  }, REWARD_TIMEOUT_DURATION);\r\n};\r\n\r\nconst hideReward = () => {};\r\n\r\nconst killEnemy = (enemy: Enemy) => {\r\n  const launchExplosion = () => {\r\n    bombAudio.play();\r\n    bombAudio.currentTime = 0;\r\n\r\n    launchAnimationAndDeclareItLaunched(\r\n      enemy.element.firstChild as HTMLImageElement,\r\n      0,\r\n      \"png\",\r\n      \"assets/challenge/explosion\",\r\n      1,\r\n      10,\r\n      1,\r\n      false,\r\n      ANIMATION_ID.opponent_death\r\n    );\r\n  };\r\n\r\n  launchExplosion();\r\n\r\n  destroyEnemyAndLaunchNewOne(enemy);\r\n};\r\n\r\nconst destroyEnemy = (enemy: Enemy) => {\r\n  clearAndHideAnswerDataContainer();\r\n\r\n  setTimeout(() => {\r\n    ANIMATION_RUNNING_VALUES[ANIMATION_ID.opponent_run] = 0;\r\n    enemy.element.remove();\r\n    if (!preTransformed) {\r\n      triggerOpponentsApparition();\r\n    }\r\n  }, 300);\r\n\r\n  ennemiesOnScreen.forEach((enemyOnScreen, index) => {\r\n    if (enemy === enemyOnScreen) {\r\n      ennemiesOnScreen.splice(index, 1);\r\n    }\r\n  });\r\n};\r\n\r\nconst destroyEnemyAndLaunchNewOne = (enemy: Enemy) => {\r\n  destroyEnemy(enemy);\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.opponent_run] = 0;\r\n};\r\n\r\nconst hurtHero = () => {\r\n  if (!heroIsAlive) {\r\n    return;\r\n  }\r\n  runAudio.volume = 0;\r\n\r\n  rewardStreak = 0;\r\n  updateTransformationProgressBarDisplay();\r\n\r\n  heroHurt = true;\r\n  //lifepoints.value--;\r\n  checkForHerosDeath();\r\n\r\n  hurtAudio.play();\r\n  hurtAudio.currentTime = 0;\r\n\r\n  updateLifePointsDisplay();\r\n  launchHeroHurtAnimation();\r\n\r\n  displayMalus(\"Malus! You were hurt!\");\r\n};\r\n\r\nconst checkForHerosDeath = () => {\r\n  if (lifePoints.value === 0) {\r\n    killHero();\r\n  }\r\n};\r\n\r\nconst killHero = () => {\r\n  runAudio.volume = 0;\r\n  heroIsAlive = false;\r\n  launchDeathAnimation();\r\n};\r\n\r\nconst detectCollision = () => {\r\n  ennemiesOnScreen.forEach((enemyOnScreen) => {\r\n    if (\r\n      heroContainer.getBoundingClientRect().left +\r\n        heroContainer.getBoundingClientRect().width >\r\n        enemyOnScreen.element.getBoundingClientRect().left &&\r\n      enemyOnScreen.collideable\r\n    ) {\r\n      enemyOnScreen.collideable = false;\r\n\r\n      if (!invisible || enemyOnScreen.answer.good) {\r\n        hurtHero();\r\n      } else if (invisible && !enemyOnScreen.answer.good) {\r\n        rewardHero();\r\n        transformIfRequired();\r\n      }\r\n    }\r\n  });\r\n\r\n  requestAnimationFrame(detectCollision);\r\n};\r\n\r\nconst checkForScreenUpdateFromLeftToRight = (throttleNum: number): any => {\r\n  if (throttleNum < 10) {\r\n    throttleNum++;\r\n    return requestAnimationFrame(() =>\r\n      checkForScreenUpdateFromLeftToRight(throttleNum)\r\n    );\r\n  }\r\n\r\n  throttleNum = 0;\r\n\r\n  //deletion\r\n\r\n  //pick first map block\r\n\r\n  const firstMapDomElement = MAPS[0];\r\n\r\n  if (firstMapDomElement.offsetLeft < -window.innerWidth) {\r\n    firstMapDomElement.remove();\r\n    MAPS.shift();\r\n  }\r\n\r\n  //creation\r\n\r\n  const lastMapDomElement = MAPS[MAPS.length - 1];\r\n\r\n  if (\r\n    lastMapDomElement &&\r\n    lastMapDomElement.offsetLeft <= window.innerWidth / 10\r\n  ) {\r\n    MAPS.push(\r\n      createMapBlock(\r\n        lastMapDomElement.offsetLeft + lastMapDomElement.offsetWidth\r\n      )\r\n    );\r\n  }\r\n\r\n  requestAnimationFrame(() => checkForScreenUpdateFromLeftToRight(throttleNum));\r\n};\r\n\r\nconst checkForScreenUpdateFromRightToLeft = (throttleNum: number): any => {\r\n  if (ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_right_to_left] === 0) {\r\n    return;\r\n  }\r\n\r\n  if (throttleNum < 10) {\r\n    throttleNum++;\r\n    return requestAnimationFrame(() =>\r\n      checkForScreenUpdateFromRightToLeft(throttleNum)\r\n    );\r\n  }\r\n\r\n  throttleNum = 0;\r\n\r\n  //creation\r\n\r\n  //pick first map block\r\n\r\n  const firstMapDomElement = MAPS[0];\r\n\r\n  if (\r\n    firstMapDomElement &&\r\n    firstMapDomElement.offsetLeft > -window.innerWidth\r\n  ) {\r\n    MAPS.unshift(\r\n      createMapBlock(\r\n        firstMapDomElement.offsetLeft - firstMapDomElement.offsetWidth\r\n      )\r\n    );\r\n  }\r\n\r\n  const lastMapDomElement = MAPS[MAPS.length - 1];\r\n\r\n  if (lastMapDomElement && lastMapDomElement.offsetLeft > window.innerWidth) {\r\n    lastMapDomElement.remove();\r\n    MAPS.pop();\r\n  }\r\n\r\n  requestAnimationFrame(() => checkForScreenUpdateFromRightToLeft(throttleNum));\r\n};\r\n\r\nconst launchHeroRunAnimation = () => {\r\n  if (!heroIsAlive) {\r\n    return;\r\n  }\r\n\r\n  runAudio.volume = 0.7;\r\n\r\n  launchAnimationAndDeclareItLaunched(\r\n    heroImage,\r\n    0,\r\n    \"png\",\r\n    `assets/challenge/characters/${\r\n      transformed ? \"transformed_hero\" : \"hero\"\r\n    }/run`,\r\n    1,\r\n    transformed ? 6 : 8,\r\n    1,\r\n    true,\r\n    transformed ? ANIMATION_ID.transformation_run : ANIMATION_ID.run\r\n  );\r\n};\r\n\r\nconst launchRun = () => {\r\n  if (timeStoped) {\r\n    return;\r\n  }\r\n\r\n  startCamera();\r\n  moveCamera(ANIMATION_ID.camera_left_to_right, 0, Date.now());\r\n  launchHeroRunAnimation();\r\n};\r\n\r\nconst checkForOpponentAttack = () => {\r\n  ennemiesOnScreen.forEach((enemy) => {\r\n    if (\r\n      enemy.element.getBoundingClientRect().left <\r\n      heroContainer.getBoundingClientRect().left +\r\n        heroContainer.getBoundingClientRect().width\r\n    ) {\r\n      ANIMATION_RUNNING_VALUES[ANIMATION_ID.opponent_run] = 0;\r\n\r\n      launchAnimationAndDeclareItLaunched(\r\n        heroImage,\r\n        0,\r\n        \"png\",\r\n        \"assets/challenge/characters/hero/stop_time\",\r\n        1,\r\n        4,\r\n        1,\r\n        false,\r\n        ANIMATION_ID.opponent_run\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\nconst heroInitialTop = heroContainer.getBoundingClientRect().top;\r\n\r\nconst launchFly = (jumpingForward = true) => {\r\n  // Get the hero's current position from the bottom style property\r\n  const currentTop = heroContainer.getBoundingClientRect().top;\r\n\r\n  if (jumpingForward) {\r\n    // Move the hero upwards\r\n    const newTop = currentTop - window.innerHeight * 0.005;\r\n    heroContainer.style.top = `${newTop}px`;\r\n\r\n    // Check if the hero has reached the peak\r\n    if (newTop <= heroInitialTop - window.innerHeight * 0.2) {\r\n      jumpingForward = false;\r\n    }\r\n  } else {\r\n    // Move the hero downwards\r\n    const newTop = currentTop + window.innerHeight * 0.005;\r\n    heroContainer.style.top = `${newTop}px`;\r\n\r\n    // Check if the hero has returned to the initial position\r\n    if (newTop >= heroInitialTop) {\r\n      heroContainer.style.top = `${heroInitialTop}px`;\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Continue the animation\r\n  requestAnimationFrame(() => launchFly(jumpingForward));\r\n};\r\ndocument.addEventListener(\"keydown\", (event) => {\r\n  if (event.key === \"d\" && !gameLaunched) {\r\n    launchGame();\r\n  }\r\n\r\n  if (!gameLaunched || preTransformed || heroHurt) {\r\n    return;\r\n  }\r\n\r\n  if (event.key === \" \" && !invisible) {\r\n    launchInvisibilityToggle();\r\n  }\r\n  if (event.key === \"w\") {\r\n    launchAttack();\r\n  }\r\n\r\n  if (event.key === \"v\") {\r\n    slowTime(10);\r\n  }\r\n\r\n  if (event.key === \"y\") {\r\n    launchDeathAnimation();\r\n  }\r\n\r\n  if (event.key === \"s\") {\r\n    timeManipulationToggle();\r\n  }\r\n});\r\n\r\nconst clearGameTimeouts = () => {\r\n  GAME_TIMEOUTS[TimeoutId.HERO].forEach((timeout) => {\r\n    clearTimeout(timeout);\r\n  });\r\n  GAME_TIMEOUTS[TimeoutId.HERO] = [];\r\n\r\n  GAME_TIMEOUTS[TimeoutId.ENEMY].forEach((timeout) => clearTimeout(timeout));\r\n  GAME_TIMEOUTS[TimeoutId.ENEMY] = [];\r\n};\r\n\r\nconst stopTime = () => {\r\n  runAudio.volume = 0;\r\n\r\n  timeStoped = true;\r\n\r\n  clearGameTimeouts();\r\n\r\n  if (enemiesComingTimeout) {\r\n    clearTimeout(enemiesComingTimeout);\r\n  }\r\n\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.attack] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.run] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.death] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.hurt] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.idle] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.opponent_run] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.opponent_death] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.opponent_move] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_left_to_right] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_right_to_left] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.character_left_to_right_move] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.transformation_pre_run] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.transformation_run] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.transformation_hurt] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.boss_idle] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.boss_attack] = 0;\r\n\r\n  launchAnimationAndDeclareItLaunched(\r\n    heroImage,\r\n    0,\r\n    \"png\",\r\n    \"assets/challenge/characters/hero/stop_time\",\r\n    1,\r\n    4,\r\n    1,\r\n    false,\r\n    ANIMATION_ID.stop_time\r\n  );\r\n};\r\n\r\nconst cancelStopTimeSpell = () => {\r\n  timeStoped = false;\r\n\r\n  launchAnimationAndDeclareItLaunched(\r\n    heroImage,\r\n    0,\r\n    \"png\",\r\n    \"assets/challenge/characters/hero/cancel_stop_time\",\r\n    1,\r\n    4,\r\n    1,\r\n    false,\r\n    ANIMATION_ID.cancel_stop_time\r\n  );\r\n\r\n  clearTimeoutAndLaunchNewOne(\r\n    TimeoutId.HERO,\r\n    setTimeout(() => {\r\n      initAllAnimations();\r\n      launchRun();\r\n      ennemiesOnScreen.forEach((enemy) => launchOpponent(enemy));\r\n\r\n      if (!ennemiesOnScreen.length) {\r\n        triggerOpponentsApparition();\r\n      }\r\n    }, 1000)\r\n  );\r\n};\r\n\r\nconst checkForOpponentsClearance = () => {\r\n  ennemiesOnScreen.forEach((enemyOnScreen) => {\r\n    if (\r\n      heroContainer.getBoundingClientRect().left +\r\n        heroContainer.getBoundingClientRect().width +\r\n        window.innerWidth * 0.05 >\r\n      enemyOnScreen.element.getBoundingClientRect().left\r\n    ) {\r\n    }\r\n    if (\r\n      enemyOnScreen.element.getBoundingClientRect().left <\r\n      0 - window.innerWidth * 0.2\r\n    ) {\r\n      destroyEnemyAndLaunchNewOne(enemyOnScreen);\r\n    }\r\n  });\r\n\r\n  requestAnimationFrame(checkForOpponentsClearance);\r\n};\r\n\r\nconst launchInvisibilityToggle = () => {\r\n  invisible = !invisible;\r\n\r\n  heroContainer.style.opacity = invisible ? \"0.3\" : \"1\";\r\n\r\n  if (invisible) {\r\n    const teleportAudio = document.getElementById(\r\n      \"teleport_audio\"\r\n    )! as HTMLAudioElement;\r\n    teleportAudio.volume = 0.15;\r\n    teleportAudio.play().then((val) => (teleportAudio.currentTime = 0));\r\n  }\r\n\r\n  if (!invisible) {\r\n    return;\r\n  }\r\n\r\n  setTimeout(launchInvisibilityToggle, INVISIBILITY_DURATION_IN_MILLISECONDS);\r\n};\r\n\r\nwindow.launchInvisibilityToggle = launchInvisibilityToggle;\r\n\r\nconst launchTransformation = () => {\r\n  if (timeStoped) {\r\n    return;\r\n  }\r\n  runAudio.volume = 0;\r\n  swordAudio.volume = 0;\r\n  bombAudio.volume = 0;\r\n  epicAudio.pause();\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.run] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.transformation_run] = 0;\r\n\r\n  if (transformedAlready) {\r\n    electricityAudio.volume = 0.7;\r\n\r\n    transformationScreamAudio.volume = 0.1;\r\n\r\n    transformationScreamAudio.play();\r\n\r\n    setTimeout(() => transformedEpicAudio.play(), 1000);\r\n\r\n    setTimeout(() => electricityAudio.play(), 200);\r\n\r\n    document.getElementById(\"transformation_background\")!.style.display =\r\n      \"none\";\r\n\r\n    clearGameTimeouts();\r\n\r\n    transformed = true;\r\n\r\n    launchAnimationAndDeclareItLaunched(\r\n      heroImage,\r\n      0,\r\n      \"png\",\r\n      \"assets/challenge/characters/transformed_hero/run\",\r\n      1,\r\n      6,\r\n      1,\r\n      true,\r\n      ANIMATION_ID.transformation_run\r\n    );\r\n\r\n    setTimeout(turnHeroTransformationOff, 20000);\r\n    return;\r\n  }\r\n\r\n  document.getElementById(\"transformation_background\")!.style.display = \"flex\";\r\n\r\n  heroImage.src = \"assets/challenge/characters/hero/walk/1.png\";\r\n\r\n  preTransformed = true;\r\n\r\n  clearAllOponentsAndTimeouts();\r\n\r\n  bassAudio.play();\r\n\r\n  setTimeout(() => electricityAudio.play(), 200);\r\n\r\n  clearTimeoutAndLaunchNewOne(\r\n    TimeoutId.HERO,\r\n    setTimeout(() => {\r\n      launchAnimationAndDeclareItLaunched(\r\n        heroImage,\r\n        0,\r\n        \"png\",\r\n        \"assets/challenge/characters/transformed_hero/pre_run\",\r\n        1,\r\n        9,\r\n        1,\r\n        true,\r\n        ANIMATION_ID.transformation_pre_run\r\n      );\r\n\r\n      if (enemiesComingTimeout) {\r\n        clearTimeout(enemiesComingTimeout);\r\n      }\r\n\r\n      clearTimeoutAndLaunchNewOne(\r\n        TimeoutId.HERO,\r\n        setTimeout(() => {\r\n          triggerOpponentsApparition();\r\n\r\n          document.getElementById(\"transformation_background\")!.style.display =\r\n            \"none\";\r\n\r\n          transformationScreamAudio.play();\r\n\r\n          setTimeout(() => transformedEpicAudio.play(), 1000);\r\n\r\n          electricityAudio.volume = 0.2;\r\n\r\n          ANIMATION_RUNNING_VALUES[ANIMATION_ID.transformation_pre_run] = 0;\r\n\r\n          transformed = true;\r\n\r\n          preTransformed = false;\r\n\r\n          runAudio.volume = 0.7;\r\n          swordAudio.volume = 0.65;\r\n          bombAudio.volume = 0.12;\r\n\r\n          progressBar.style.display = \"none\";\r\n\r\n          launchAnimationAndDeclareItLaunched(\r\n            heroImage,\r\n            0,\r\n            \"png\",\r\n            \"assets/challenge/characters/transformed_hero/run\",\r\n            1,\r\n            6,\r\n            1,\r\n            true,\r\n            ANIMATION_ID.transformation_run\r\n          );\r\n\r\n          setTimeout(turnHeroTransformationOff, 15000);\r\n        }, 5000)\r\n      );\r\n    }, 500)\r\n  );\r\n};\r\n\r\nconst clearAllOponentsAndTimeouts = () => {\r\n  ennemiesOnScreen.forEach((enemy, index) => {\r\n    ANIMATION_RUNNING_VALUES[ANIMATION_ID.opponent_run] = 0;\r\n    enemy.element.remove();\r\n    ennemiesOnScreen.splice(index, 1);\r\n  });\r\n};\r\n\r\nconst lightUpAnswerDataContainer = () => {\r\n  answerDataContainer.style.opacity = \"1\";\r\n};\r\n\r\nconst clearAndHideAnswerDataContainer = () => {\r\n  answerDataContainer.style.opacity = \"1\";\r\n  answerDataValue.innerHTML = \"\";\r\n};\r\n\r\nconst launchSwordSlash = () => {\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.hero_sword_slash]++;\r\n  if (\r\n    ANIMATION_RUNNING_VALUES[ANIMATION_ID.hero_sword_slash] !== 1 ||\r\n    transformed\r\n  ) {\r\n    return;\r\n  }\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.hero_sword_slash]++;\r\n\r\n  swordSlashImg.style.display = \"flex\";\r\n\r\n  setTimeout(() => {\r\n    swordSlashImg.style.display = \"none\";\r\n    ANIMATION_RUNNING_VALUES[ANIMATION_ID.hero_sword_slash] = 0;\r\n  }, 75);\r\n};\r\n\r\nconst launchDeathAnimation = () => {\r\n  initHeroAnimations();\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_left_to_right] = 0;\r\n\r\n  const killHero = () => {\r\n    launchAnimationAndDeclareItLaunched(\r\n      heroImage,\r\n      0,\r\n      \"png\",\r\n      \"assets/challenge/characters/hero/death\",\r\n      1,\r\n      6,\r\n      1,\r\n      false,\r\n      ANIMATION_ID.death\r\n    );\r\n\r\n    clearGameTimeouts();\r\n\r\n    setTimeout(\r\n      () => (window.location.href = `http://localhost:3001/dead`),\r\n      1000\r\n    );\r\n  };\r\n\r\n  if (transformed) {\r\n    transformed = false;\r\n  }\r\n\r\n  heroImage.src = \"assets/challenge/characters/hero/death/1.png\";\r\n\r\n  setTimeout(killHero, 1000);\r\n};\r\n\r\nconst launchHeroHurtAnimation = () => {\r\n  launchAnimationAndDeclareItLaunched(\r\n    heroImage,\r\n    0,\r\n    \"png\",\r\n    transformed\r\n      ? \"assets/challenge/characters/transformed_hero/hurt\"\r\n      : \"assets/challenge/characters/hero/hurt\",\r\n    1,\r\n    transformed ? 5 : 3,\r\n    1,\r\n    false,\r\n    transformed ? ANIMATION_ID.transformation_hurt : ANIMATION_ID.hurt\r\n  );\r\n\r\n  initHeroAnimations();\r\n\r\n  stopCamera();\r\n\r\n  clearTimeoutAndLaunchNewOne(\r\n    TimeoutId.HERO,\r\n    setTimeout(() => {\r\n      heroHurt = false;\r\n      if (heroIsAlive && ANIMATION_RUNNING_VALUES[ANIMATION_ID.run] === 0) {\r\n        launchRun();\r\n      }\r\n    }, 500)\r\n  );\r\n};\r\n\r\nconst stopCamera = () => {\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_left_to_right] = 0;\r\n};\r\n\r\nconst startCamera = () => {\r\n  if (ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_left_to_right] > 0) {\r\n    return;\r\n  }\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_left_to_right]++;\r\n};\r\n\r\nconst initHeroAnimations = () => {\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.run] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.transformation_pre_run] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.transformation_run] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.hurt] = 0;\r\n};\r\n\r\nwindow.onload = () => {\r\n  setupListeners();\r\n  launchHardModeToggle();\r\n  MAPS.push(createMapBlock(0));\r\n  MAPS.push(createMapBlock(100));\r\n  createGameAccordingToMode();\r\n  updateLifePointsDisplay();\r\n  updateScoreDisplay();\r\n  detectCollision();\r\n  checkForScreenUpdateFromLeftToRight(10);\r\n  checkForOpponentsClearance();\r\n  defineCurrentSubject(hardMode ? STATS : MATHS_ARITHMETIC);\r\n  defineSwordReach();\r\n  updateTransformationProgressBarDisplay();\r\n};\r\n\r\nconst setupListeners = () => {\r\n  document\r\n    .getElementById(\"playAgainLink\")\r\n    ?.addEventListener(\"click\", (event: Event) => window.location.reload());\r\n\r\n  document\r\n    .getElementById(\"backToStormGradButton\")\r\n    ?.addEventListener(\"click\", goBackToMountain);\r\n};\r\n\r\nconst createGameAccordingToMode = () => {\r\n  if (hardMode) {\r\n    return;\r\n  }\r\n  progressBar.style.display = \"flex\";\r\n};\r\n\r\nconst launchHardModeToggle = () => {\r\n  const modeParameter = getUrlParameter(\"mode\");\r\n\r\n  if (!modeParameter) {\r\n    console.log(\"there is no mode parameter\");\r\n\r\n    return;\r\n  }\r\n\r\n  hardMode = modeParameter === \"hard\";\r\n};\r\n\r\nconst getTransformationProgressValue = () => {\r\n  return Math.floor((rewardStreak / TRANSFORMATION_THRESHOLD) * 100);\r\n};\r\n\r\nconst updateTransformationProgressBarDisplay = () => {\r\n  const progress = document.querySelector(\".progress\")! as HTMLElement;\r\n  progress.style.setProperty(\r\n    \"--progress\",\r\n    `${getTransformationProgressValue()}%`\r\n  );\r\n};\r\n\r\nconst defineSwordReach = () => {\r\n  swordReach = window.innerWidth * (window.innerWidth > 1000 ? 0.15 : 0.35);\r\n};\r\n\r\nconst launchGame = () => {\r\n  runAudio.play();\r\n  epicAudio.play();\r\n  gameLaunched = true;\r\n  launchRun();\r\n  triggerOpponentsApparition();\r\n};\r\n\r\nconst defineCurrentSubject = (subject: Subject) => {\r\n  currentSubject = subject;\r\n  currentSubjectTotal = currentSubject.good.length + currentSubject.bad.length;\r\n};\r\n\r\nconst killAllAudios = () => {\r\n  runAudio.pause();\r\n  epicAudio.pause();\r\n  transformedEpicAudio.pause();\r\n};\r\n\r\nconst getUrlParameter = (name: string): string | null => {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  return urlParams.get(name);\r\n};\r\n"],
  "mappings": "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",
  "names": ["ANIMATION_ID", "killHero"]
}

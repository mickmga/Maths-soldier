{
  "version": 3,
  "sources": ["../../src/discovery.ts"],
  "sourcesContent": ["const MAPS: HTMLElement[] = [];\r\nconst heroImage = document.getElementById(\"heroImg\")! as HTMLImageElement;\r\n\r\nconst stepsInSwow = document.getElementById(\r\n  \"snow_steps_audio\"\r\n)! as HTMLAudioElement;\r\nconst windowAudio = document.getElementById(\"wind_audio\")! as HTMLAudioElement;\r\n\r\nwindowAudio.volume = 0.7;\r\nstepsInSwow.volume = 0.7;\r\nstepsInSwow.playbackRate = 1.2;\r\n\r\nlet backgroundSrc = \"assets/challenge/maps/outside.png\";\r\n\r\nlet currentCacheLeftIndex = 0;\r\nlet currentCacheRightIndex = 1;\r\n\r\nlet converstationWithBardStarted = false;\r\n\r\nenum ANIMATION_ID {\r\n  attack,\r\n  run,\r\n  walk,\r\n  opponent_run,\r\n  camera_left_to_right,\r\n  camera_right_to_left,\r\n  character_left_to_right_move,\r\n  golem_idle,\r\n  golem_door_creation,\r\n  obelisk_idle,\r\n  obelisk_lightning,\r\n}\r\n\r\nconst ANIMATION_RUNNING_VALUES = {\r\n  [ANIMATION_ID.attack]: 0,\r\n  [ANIMATION_ID.run]: 0,\r\n  [ANIMATION_ID.walk]: 0,\r\n  [ANIMATION_ID.opponent_run]: 0,\r\n  [ANIMATION_ID.camera_left_to_right]: 0,\r\n  [ANIMATION_ID.camera_right_to_left]: 0,\r\n  [ANIMATION_ID.character_left_to_right_move]: 0,\r\n  [ANIMATION_ID.golem_idle]: 0,\r\n  [ANIMATION_ID.golem_door_creation]: 0,\r\n  [ANIMATION_ID.obelisk_idle]: 0,\r\n  [ANIMATION_ID.obelisk_lightning]: 0,\r\n};\r\n\r\nconst launchGolemIdleAnimation = () => {\r\n  const golemImage = document.getElementById(\"golemImage\") as HTMLImageElement;\r\n\r\n  if (!golemImage) {\r\n    return;\r\n  }\r\n  launchAnimationAndDeclareItLaunched(\r\n    golemImage,\r\n    0,\r\n    \"png\",\r\n    \"assets/challenge/characters/neutral/golem\",\r\n    1,\r\n    8,\r\n    1,\r\n    true,\r\n    ANIMATION_ID.golem_idle\r\n  );\r\n};\r\n\r\nconst launchTutorialTalk = () => {\r\n  if (converstationWithBardStarted) {\r\n    window.location.href = `${process.env.URL_BASE}/challenge`;\r\n    return;\r\n  }\r\n  converstationWithBardStarted = true;\r\n  const audio = document.getElementById(`bard_tutorial_1`)! as HTMLAudioElement;\r\n  audio.play();\r\n};\r\n\r\nconst createMapPalaceBlock = (left: number) => {\r\n  const block = document.createElement(\"div\");\r\n  block.classList.add(\"mapBlock\");\r\n  const backgroundImage = document.createElement(\"img\");\r\n  backgroundImage.src = backgroundSrc;\r\n  block.append(backgroundImage);\r\n  block.style.position = \"fixed\";\r\n  block.style.left = `${left}px`;\r\n  block.style.top = `0px`;\r\n\r\n  document.getElementsByTagName(\"body\")[0].append(block);\r\n\r\n  if (left === window.innerWidth) {\r\n    const golemImg = document.createElement(\"img\") as HTMLImageElement;\r\n    golemImg.id = \"golemImage\";\r\n    golemImg.src = \"assets/challenge/characters/neutral/golem/1.png\";\r\n\r\n    const golemLink = document.createElement(\"a\");\r\n    golemLink.onclick = launchTutorialTalk;\r\n\r\n    golemLink.append(golemImg);\r\n\r\n    block.append(golemLink);\r\n\r\n    launchGolemIdleAnimation();\r\n  } else if (left === window.innerWidth * 2) {\r\n    const obeliskContainer = document.createElement(\"div\");\r\n    obeliskContainer.id = \"obeliskContainer\";\r\n    obeliskContainer.onclick = () =>\r\n      (window.location.href = `${process.env.URL_BASE}/page`);\r\n\r\n    const obeliskLightning = document.createElement(\"img\");\r\n    obeliskLightning.src = \"assets/challenge/items/lightning/1.png\";\r\n    obeliskLightning.id = \"obeliskLightning\";\r\n\r\n    obeliskContainer.append(obeliskLightning);\r\n\r\n    const obeliskImg = document.createElement(\"img\") as HTMLImageElement;\r\n    obeliskImg.id = \"obeliskImage\";\r\n    obeliskImg.src = \"assets/challenge/items/obelisk/1.png\";\r\n    obeliskContainer.append(obeliskImg);\r\n\r\n    block.append(obeliskContainer);\r\n\r\n    launchObeliskAnimation();\r\n    setTimeout(launchObeliskLightningAnimation, 10000);\r\n  }\r\n\r\n  return block;\r\n};\r\n\r\nconst moveCamera = (\r\n  direction: ANIMATION_ID,\r\n  previousFrameTimestamp: number\r\n) => {\r\n  if (\r\n    ANIMATION_RUNNING_VALUES[direction] === 0 ||\r\n    ANIMATION_RUNNING_VALUES[direction] > 1\r\n  ) {\r\n    return;\r\n  }\r\n  const currentTs = Date.now();\r\n\r\n  const diff = currentTs - previousFrameTimestamp;\r\n\r\n  if (\r\n    direction === ANIMATION_ID.camera_right_to_left &&\r\n    MAPS[0].getBoundingClientRect().left >= 0\r\n  ) {\r\n    ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_right_to_left] = 0;\r\n    return;\r\n  }\r\n\r\n  if (\r\n    direction === ANIMATION_ID.camera_left_to_right &&\r\n    MAPS[MAPS.length - 1].getBoundingClientRect().left <= 0\r\n  ) {\r\n    ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_left_to_right] = 0;\r\n    return;\r\n  }\r\n\r\n  MAPS.forEach(\r\n    (map) =>\r\n      (map.style.left = `${\r\n        map.getBoundingClientRect().left +\r\n        (direction === ANIMATION_ID.camera_left_to_right ? -1 : 1) *\r\n          Math.floor(diff / 4)\r\n      }px`)\r\n  );\r\n\r\n  requestAnimationFrame(() => moveCamera(direction, currentTs));\r\n};\r\n\r\nconst launchAnimationAndDeclareItLaunched = (\r\n  characterElement: HTMLImageElement,\r\n  throttleNum: number,\r\n  extension: string,\r\n  spriteBase: string,\r\n  spriteIndex: number,\r\n  max: number,\r\n  min: number,\r\n  loop: boolean,\r\n  animationId: ANIMATION_ID\r\n) => {\r\n  ANIMATION_RUNNING_VALUES[animationId]++;\r\n\r\n  launchCharacterAnimation(\r\n    characterElement,\r\n    throttleNum,\r\n    extension,\r\n    spriteBase,\r\n    spriteIndex,\r\n    max,\r\n    min,\r\n    loop,\r\n    animationId,\r\n    Date.now()\r\n  );\r\n};\r\n\r\nconst launchCharacterAnimation = (\r\n  characterElement: HTMLImageElement,\r\n  throttleNum: number,\r\n  extension: string,\r\n  spriteBase: string,\r\n  spriteIndex: number,\r\n  max: number,\r\n  min: number,\r\n  loop: boolean,\r\n  animationId: ANIMATION_ID,\r\n  previousExecutionTimeStamp = Date.now()\r\n): any => {\r\n  if (!characterElement) {\r\n    return;\r\n  }\r\n\r\n  if (\r\n    !ANIMATION_RUNNING_VALUES[animationId] ||\r\n    ANIMATION_RUNNING_VALUES[animationId] > 1\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  const currentTimeStamp = Date.now();\r\n\r\n  const executionDiff = currentTimeStamp - previousExecutionTimeStamp;\r\n\r\n  if (executionDiff < 150) {\r\n    return requestAnimationFrame(() =>\r\n      launchCharacterAnimation(\r\n        characterElement,\r\n        throttleNum,\r\n        extension,\r\n        spriteBase,\r\n        spriteIndex,\r\n        max,\r\n        min,\r\n        loop,\r\n        animationId,\r\n        previousExecutionTimeStamp\r\n      )\r\n    );\r\n  }\r\n\r\n  if (spriteIndex === max) {\r\n    if (loop === false) {\r\n      return;\r\n    }\r\n\r\n    spriteIndex = min;\r\n  } else {\r\n    spriteIndex++;\r\n  }\r\n\r\n  characterElement.src = `${spriteBase}/${spriteIndex}.${extension}`;\r\n\r\n  requestAnimationFrame(() =>\r\n    launchCharacterAnimation(\r\n      characterElement,\r\n      throttleNum,\r\n      extension,\r\n      spriteBase,\r\n      spriteIndex,\r\n      max,\r\n      min,\r\n      loop,\r\n      animationId,\r\n      currentTimeStamp\r\n    )\r\n  );\r\n};\r\n\r\nconst checkForScreenUpdateFromLeftToRight = (throttleNum: number): any => {\r\n  if (ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_left_to_right] === 0) {\r\n    return;\r\n  }\r\n\r\n  if (throttleNum < 5) {\r\n    throttleNum++;\r\n    return requestAnimationFrame(() =>\r\n      checkForScreenUpdateFromLeftToRight(throttleNum)\r\n    );\r\n  }\r\n\r\n  throttleNum = 0;\r\n\r\n  // Deletion and creation logic...\r\n  const firstMapDomElement = MAPS[0];\r\n\r\n  if (firstMapDomElement.getBoundingClientRect().left < -window.innerWidth) {\r\n    firstMapDomElement.remove();\r\n    MAPS.shift();\r\n    currentCacheLeftIndex++;\r\n  }\r\n\r\n  const lastMapDomElement = MAPS[MAPS.length - 1];\r\n\r\n  if (\r\n    lastMapDomElement &&\r\n    lastMapDomElement.getBoundingClientRect().left <= window.innerWidth / 10 &&\r\n    currentCacheRightIndex <\r\n      window.store.getState().localStorage.mapBlocks.length - 1\r\n  ) {\r\n    MAPS.push(\r\n      createMapPalaceBlock(\r\n        lastMapDomElement.getBoundingClientRect().left +\r\n          lastMapDomElement.offsetWidth\r\n      )\r\n    );\r\n    currentCacheRightIndex++;\r\n  }\r\n\r\n  requestAnimationFrame(() => checkForScreenUpdateFromLeftToRight(throttleNum));\r\n};\r\n\r\nconst checkForScreenUpdateFromRightToLeft = (throttleNum: number): any => {\r\n  if (ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_right_to_left] === 0) {\r\n    return;\r\n  }\r\n\r\n  if (throttleNum < 5) {\r\n    throttleNum++;\r\n    return requestAnimationFrame(() =>\r\n      checkForScreenUpdateFromRightToLeft(throttleNum)\r\n    );\r\n  }\r\n\r\n  throttleNum = 0;\r\n\r\n  const firstMapDomElement = MAPS[0];\r\n\r\n  if (\r\n    firstMapDomElement &&\r\n    firstMapDomElement.getBoundingClientRect().left > -window.innerWidth &&\r\n    currentCacheLeftIndex > 0\r\n  ) {\r\n    MAPS.unshift(\r\n      createMapPalaceBlock(\r\n        firstMapDomElement.getBoundingClientRect().left -\r\n          firstMapDomElement.offsetWidth\r\n      )\r\n    );\r\n    currentCacheLeftIndex--;\r\n  }\r\n\r\n  const lastMapDomElement = MAPS[MAPS.length - 1];\r\n\r\n  if (\r\n    lastMapDomElement &&\r\n    lastMapDomElement.getBoundingClientRect().left > window.innerWidth\r\n  ) {\r\n    lastMapDomElement.remove();\r\n    MAPS.pop();\r\n  }\r\n\r\n  requestAnimationFrame(() => checkForScreenUpdateFromRightToLeft(throttleNum));\r\n};\r\n\r\nconst initAndLaunchFootStepsAudio = () => {\r\n  stepsInSwow.currentTime = 0;\r\n  stepsInSwow.play();\r\n};\r\n\r\nconst launchCharacterMovement = () => {\r\n  initAndLaunchFootStepsAudio();\r\n  moveCamera(ANIMATION_ID.camera_left_to_right, Date.now());\r\n  launchAnimationAndDeclareItLaunched(\r\n    heroImage,\r\n    0,\r\n    \"png\",\r\n    \"assets/palace/hero/old_walk\",\r\n    1,\r\n    6,\r\n    1,\r\n    true,\r\n    ANIMATION_ID.walk\r\n  );\r\n};\r\n\r\nconst launchCharacterMovementLeft = () => {\r\n  initAndLaunchFootStepsAudio();\r\n  moveCamera(ANIMATION_ID.camera_right_to_left, Date.now());\r\n  launchAnimationAndDeclareItLaunched(\r\n    heroImage,\r\n    0,\r\n    \"png\",\r\n    \"assets/palace/hero/walk_left\",\r\n    1,\r\n    6,\r\n    1,\r\n    true,\r\n    ANIMATION_ID.walk\r\n  );\r\n};\r\n\r\ndocument.addEventListener(\r\n  \"keydown\",\r\n\r\n  (event) => {\r\n    if (\r\n      event.key === \"d\" &&\r\n      ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_left_to_right] === 0\r\n    ) {\r\n      ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_left_to_right]++;\r\n      if (!isAnimating) {\r\n        isAnimating = true;\r\n\r\n        launchCharacterMovement();\r\n      }\r\n    }\r\n\r\n    if (\r\n      event.key === \"q\" &&\r\n      ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_right_to_left] === 0\r\n    ) {\r\n      ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_right_to_left]++;\r\n      isAnimating = true;\r\n      launchCharacterMovementLeft();\r\n    }\r\n  }\r\n);\r\n\r\ndocument.addEventListener(\"keyup\", (event) => {\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.character_left_to_right_move] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.walk] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_left_to_right] = 0;\r\n  ANIMATION_RUNNING_VALUES[ANIMATION_ID.camera_right_to_left] = 0;\r\n  isAnimating = false; // Stop animation when \"d\" is released\r\n  if (event.key === \"d\" || event.key === \"q\") {\r\n    stepsInSwow.pause();\r\n  }\r\n});\r\n\r\nwindow.onload = () => {\r\n  MAPS.push(createMapPalaceBlock(0));\r\n  MAPS.push(createMapPalaceBlock(window.innerWidth));\r\n  MAPS.push(createMapPalaceBlock(window.innerWidth * 2));\r\n};\r\n\r\nlet searchTimeout: number;\r\n\r\nconst spriteSheet = new Image();\r\nspriteSheet.src = \"assets/palace/characters/premium.png\"; // Update this to the correct path\r\n\r\nlet isAnimating = false; // Animation state\r\n\r\nconst launchObeliskLightningAnimation = () => {\r\n  const obeliskLightning = document.getElementById(\r\n    \"obeliskLightning\"\r\n  )! as HTMLImageElement;\r\n\r\n  launchAnimationAndDeclareItLaunched(\r\n    obeliskLightning,\r\n    0,\r\n    \"png\",\r\n    \"assets/challenge/items/lightning\",\r\n    1,\r\n    16,\r\n    1,\r\n    true,\r\n    ANIMATION_ID.obelisk_lightning\r\n  );\r\n};\r\n\r\nconst launchObeliskAnimation = () => {\r\n  const obeliskImage = document.getElementById(\r\n    \"obeliskImage\"\r\n  )! as HTMLImageElement;\r\n  launchAnimationAndDeclareItLaunched(\r\n    obeliskImage,\r\n    0,\r\n    \"png\",\r\n    \"assets/challenge/items/obelisk\",\r\n    1,\r\n    13,\r\n    1,\r\n    true,\r\n    ANIMATION_ID.obelisk_idle\r\n  );\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
